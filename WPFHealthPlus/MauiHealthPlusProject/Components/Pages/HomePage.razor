@page "/HomePage/{userId:int}"
@page "/HomePage"
@inject NavigationManager nav

<style>
    body {
        margin: 0;
        padding: 0;
        font-family: 'Segoe UI', sans-serif;
        background-color: #FF01052F;
    }

    .container {
        position: relative;
        width: 100%;
        height: 100vh;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .navigation-bar {
        position: absolute;
        top: 75px;
    }

    .background-image {
        position: absolute;
        margin: 318px 0 0 720px;
        width: 230px;
        height: 230px;
    }

    .person-info {
        position: absolute;
        top: 446px;
        left: 353px;
        display: flex;
        flex-direction: column;
        font-size: 50px;
        color: #000000;
        font-weight: bold;
        font-family: 'Segoe UI', sans-serif;
    }

    .logout-button {
        margin-top: auto;
        width: 180px;
        height: 50px;
        background-color: #66CDAA;
        color: white;
        font-size: 24px;
        border: none;
        border-radius: 10px;
        cursor: pointer;
    }

        .logout-button:hover {
            background-color: #5cb85c;
        }
</style>

<body>
    @if (loggedInUser != null)
    {
        <div class="container">
            <!-- Navigation Bar -->
            <div class="navigation-bar">
                <!-- Navigation Bar content goes here -->
            </div>

            <!-- Display Person Information -->
            <div class="person-info">
                <label for="first-name">Username: @loggedInUser.Username</label>
                <label for="gmail">Gmail: @loggedInUser.Gmail</label>
            </div>

            <!-- Logout Button -->
            <button class="logout-button" @onclick="Logout">Logout</button>

            <button class="btn btn-outline-primary" @onclick=NavigateToUserDataPage>Your Meal History</button>
        </div>
    }

</body>


@code {
    [Parameter]
    public int userId { get; set; }

    private User loggedInUser;
    //מתבצעת בעת אתחול הרכיב ומטרתה היא לאחזר את רשימת המשתמשים ולמצוא את המשתמש המתאים
    protected async override Task OnInitializedAsync()
    {
        UserList userlst = await ApiServiceBlazor.api.GetUserList();
        if (userId != 0)
            loggedInUser = userlst.Find(x => x.Id == userId);

    }

    //מתבצעת בעת לחיצה על כפתור ההתנתקות. היא נועדה לנתב את המשתמש לדף ההרשמה
    private void Logout()
    {
        nav.NavigateTo("/RegisterPage");
    }

    //נועדה לנווט את המשתמש לדף היסטוריית הארוחות של המשתמש המחובר, אם המשתמש מחובר
    private void NavigateToUserDataPage()
    {
        if (loggedInUser != null)
            nav.NavigateTo($"/mealHistory/{loggedInUser.Id}");
    }
}